{"version":3,"sources":["webpack/bootstrap d82126df36d04625eae8","./frontend/twitter.js","./frontend/follow_toggle.js","./frontend/users_search.js","./frontend/tweet_compose.js","./frontend/infinite_tweets.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACnBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,wBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAiD,MAAM,IAAI,YAAY;AACvE;AACA;AACA,8BAA6B,8CAA8C;AAC3E;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;AAGA;;AAEA;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,mDAAkD,oCAAoC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,kBAAiB,cAAc,sBAAsB,cAAc,IAAI,oBAAoB,UAAU,iBAAiB;AACtH;AACA;AACA;AACA,wDAAuD,gBAAgB,IAAI,sBAAsB;AACjG;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d82126df36d04625eae8\n **/","const FollowToggle = require(\"./follow_toggle\");\nconst UsersSearch = require(\"./users_search\");\nconst TweetCompose = require(\"./tweet_compose\");\nconst InfiniteTweets = require(\"./infinite_tweets\");\n\n\n$(() => {\n  const followButtons = $(\".follow-toggle\");\n  if (followButtons.length) {\n    followButtons.each(function(i, el){\n      new FollowToggle($(el));\n    });\n  }\n  const userSearch = $(\".users-search\");\n  if (userSearch.length) {\n    new UsersSearch(userSearch);\n  }\n  new TweetCompose();\n  new InfiniteTweets();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/twitter.js\n ** module id = 0\n ** module chunks = 0\n **/","class FollowToggle {\n  constructor ($button) {\n    this.$button = $button;\n    this.userId = this.$button.data(\"button\").userId;\n    this.followState = (this.$button.data(\"button\").initialFollow) ? \"followed\" : \"unfollowed\";\n    this.render();\n    this.handleClick();\n  }\n\n  render () {\n    if(this.followState === \"unfollowed\"){\n      this.$button.text(\"Follow!\");\n    } else if(this.followState === \"followed\") {\n      this.$button.text(\"Unfollow!\");\n    } else {\n      this.$button.prop('disabled', true);\n    }\n  }\n\n  handleClick(){\n    let that = this;\n    this.$button.on('click', event => {\n      event.preventDefault();\n      let htmlVerb;\n      if (that.followState === \"unfollowed\") {\n        htmlVerb = \"POST\";\n      } else {\n        htmlVerb = \"DELETE\";\n      }\n      that.followState = (that.followState === \"followed\") ? \"unfollowing\" : \"following\";\n      that.render();\n      $.ajax({\n        url: `/users/${that.userId}/follow`,\n        type: htmlVerb,\n        dataType: 'json',\n        success() {\n          that.followState = (that.followState === \"unfollowing\") ? \"unfollowed\" : \"followed\";\n          that.$button.prop('disabled', false);\n          that.render();\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = FollowToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/follow_toggle.js\n ** module id = 1\n ** module chunks = 0\n **/","const FollowToggle = require(\"./follow_toggle\");\n\nclass UsersSearch {\n  constructor($el) {\n    this.$el = $el;\n    this.$searchform = $(\"input.searchform\");\n    this.results = $(\"ul.users\");\n    this.handleInput();\n  }\n\n  renderResults(users) {\n    this.results.html(\"\");\n    users.forEach((el) => {\n      this.results.append(`<li><a href=\"/users/${el.id}\">${el.username}</a></li>`);\n      let button = $(\"<button></button>\");\n      button.addClass(\"follow-toggle\");\n      button.data(\"button\", { \"userId\": el.id, \"initialFollow\": el.follows});\n      this.results.append(button);\n      new FollowToggle(button);\n    });\n  }\n\n  handleInput() {\n    let that = this;\n    this.$searchform.on('input', function(event) {\n      event.preventDefault();\n      $.ajax({\n        url: '/users/search',\n        type: \"GET\",\n        data: {query: that.$searchform.val()},\n        dataType: 'json',\n        success:  function(resp) {\n          that.renderResults(resp);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = UsersSearch;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/users_search.js\n ** module id = 2\n ** module chunks = 0\n **/","class TweetCompose {\n  constructor() {\n    this.$el = $('.tweet-compose');\n    this.handleInput();\n    this.handleTyping();\n    this.addMentionedUser();\n    this.removeMentionedUser();\n  }\n\n  handleTyping() {\n    $(\".tweetbox\").on('input', function(event) {\n      let num = 140;\n      let chars = $(\".tweetbox\").val().length;\n      $(\".remaining\").text(num-chars);\n    });\n  }\n\n  handleInput(){\n    let that = this;\n    this.$el.on(\"submit\", (event) => {\n      event.preventDefault();\n      let formData = this.$el.serialize();\n      $(\":input\").prop('disabled', true);\n      $.ajax({\n        url: \"/tweets\",\n        type: \"POST\",\n        data: formData,\n        dataType: \"json\",\n        success(resp) {\n          that.handleSuccess(resp);\n        }\n      });\n    });\n  }\n\n  clearInput() {\n    $(\".tweetbox\").val(\"\");\n    $(\".non-default\").prop('selected', false);\n    $(\".default\").prop('selected', true);\n    $(\".mentioned-users\").empty();\n  }\n\n  handleSuccess(resp) {\n    this.clearInput();\n    $(\":input\").prop('disabled', false);\n\n    $('#feed').trigger(\"insert-tweet\", [resp]);\n  }\n\n  addMentionedUser() {\n    $(\".add-mentioned-user\").on('click', (event) => {\n      $('.mentioned-users').append($(\".mentionscript\").html());\n    });\n  }\n\n  removeMentionedUser(){\n    $(\".mentioned-users\").on('click', $(\".remove-mentioned-user\"), (event) => {\n      if ($(event.target).is(\".remove-mentioned-user\")) {\n        $(event.target).parent().remove();\n      }\n    });\n  }\n\n\n}\n\nmodule.exports = TweetCompose;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/tweet_compose.js\n ** module id = 3\n ** module chunks = 0\n **/","class InfiniteTweets {\n  constructor() {\n    this.$ul = $(\"#feed\");\n    this.maxCreatedAt = null;\n    $(\".fetch-more\").on(\"click\", (e) => {\n      e.preventDefault();\n      this.fetchTweets();\n    })\n\n    this.$ul.on(\"insert-tweet\", (e, tweets) => {\n      e.preventDefault();\n      this.insertTweets([tweets], 0);\n    })\n\n  }\n\n  fetchTweets() {\n    let that = this;\n    let maxData = (this.maxCreatedAt !== null) ? { max_created_at: that.maxCreatedAt } : {};\n    $.ajax({\n      url: \"/feed\",\n      type: \"GET\",\n      dataType: \"json\",\n      data: maxData,\n      success(resp) {\n        that.insertTweets(resp, 1);\n        if (resp.length < 20) {\n          $(\".fetch-more\").remove();\n          that.$ul.append($(\"<li>There's no more tweets</li>\"));\n        } else {\n          that.maxCreatedAt = resp[resp.length - 1].created_at;\n        }\n      }\n    });\n  }\n\n  insertTweets(tweets, ord) {\n    tweets.forEach((tweet) => {\n      let li = $('<li></li>')\n      li.html(`${tweet.content} -- <a href=\"/users/${tweet.user.id}\">${tweet.user.username}</a> -- ${tweet.created_at}`)\n      if (tweet.mentions.length) {\n        let mentionedUserList = $('<ul></ul>');\n        tweet.mentions.forEach((mention) => {\n          let mentionedUser = $(`<li><a href=\"/users/${mention.user.id}\">${mention.user.username}</a></li>`);\n          mentionedUserList.append(mentionedUser);\n        })\n        li.append(mentionedUserList);\n      }\n      if (ord === 0){\n        this.$ul.prepend(li);\n      } else {\n        this.$ul.append(li);\n      }\n    })\n  }\n}\n\nmodule.exports = InfiniteTweets;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/infinite_tweets.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}